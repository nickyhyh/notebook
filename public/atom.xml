<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nicky&#39;s Website</title>
  
  
  <link href="https://nickyhyh.github.io/notebook/atom.xml" rel="self"/>
  
  <link href="https://nickyhyh.github.io/notebook/"/>
  <updated>2021-10-08T14:01:38.610Z</updated>
  <id>https://nickyhyh.github.io/notebook/</id>
  
  <author>
    <name>Nicky</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo博客</title>
    <link href="https://nickyhyh.github.io/notebook/2021/10/06/hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://nickyhyh.github.io/notebook/2021/10/06/hexo%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-10-06T08:29:59.546Z</published>
    <updated>2021-10-08T14:01:38.610Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h1><p>1.启动:<code>npm run server</code><br>2.停止预览：ctrl+c</p><h1 id="启动elm后台管理系统"><a href="#启动elm后台管理系统" class="headerlink" title="启动elm后台管理系统"></a>启动elm后台管理系统</h1><p><code>npm run dev</code></p><h1 id="在html里面调用vue"><a href="#在html里面调用vue" class="headerlink" title="在html里面调用vue"></a>在html里面调用vue</h1><script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script><p>注意各个同级属性间“,”分割</p><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><p>ctrl+x:删除一行<br>ctrl+f:查找</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;本地预览&quot;&gt;&lt;a href=&quot;#本地预览&quot; class=&quot;headerlink&quot; title=&quot;本地预览&quot;&gt;&lt;/a&gt;本地预览&lt;/h1&gt;&lt;p&gt;1.启动:&lt;code&gt;npm run server&lt;/code&gt;&lt;br&gt;2.停止预览：ctrl+c&lt;/p&gt;
&lt;h1 id=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>学习Element</title>
    <link href="https://nickyhyh.github.io/notebook/2021/10/05/%E5%AD%A6%E4%B9%A0element/"/>
    <id>https://nickyhyh.github.io/notebook/2021/10/05/%E5%AD%A6%E4%B9%A0element/</id>
    <published>2021-10-05T06:58:23.939Z</published>
    <updated>2021-10-06T08:33:34.349Z</updated>
    
    <content type="html"><![CDATA[<h1 id="npm安装element"><a href="#npm安装element" class="headerlink" title="npm安装element"></a>npm安装element</h1><p><code>npm i element-ui -S</code></p><h1 id="container布局容器"><a href="#container布局容器" class="headerlink" title="container布局容器"></a>container布局容器</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-container style=<span class="string">&quot;height:100vh&quot;</span>&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">el-header</span> <span class="attr">style</span>=<span class="string">&quot;height: 60px; background-color: lightyellow&quot;</span>&gt;</span>web<span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; background-color: pink&quot;</span>&gt;</span>aside<span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span>Main<span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span></span><br><span class="line">&lt;/el-container&gt;</span><br></pre></td></tr></table></figure><h1 id="NavMenu-导航菜单"><a href="#NavMenu-导航菜单" class="headerlink" title="NavMenu 导航菜单"></a>NavMenu 导航菜单</h1><p>导航菜单默认为垂直模式，通过mode属性可以使导航菜单变更为水平模式。在菜单中通过submenu组件可以生成二级菜单。Menu 还提供了background-color、text-color和active-text-color，分别用于设置菜单的背景色、菜单的文字颜色和当前激活菜单的文字颜色。</p><h2 id="Menu-Methods"><a href="#Menu-Methods" class="headerlink" title="Menu Methods"></a>Menu Methods</h2><p>open，close：展开或收起指定的 sub-menu</p><h2 id="Menu-Events"><a href="#Menu-Events" class="headerlink" title="Menu Events"></a>Menu Events</h2><p>open，close：sub-menu 展开或收起的回调<br>select：菜单激活回调，index: 收起的 sub-menu 的 index， indexPath: 收起的 sub-menu 的 index path</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-menu <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;el-menu-vertical-demo&quot;</span></span><br><span class="line">            @open=<span class="string">&quot;handleOpen&quot;</span></span><br><span class="line">            @close=<span class="string">&quot;handleClose&quot;</span></span><br><span class="line">            @select=<span class="string">&quot;select&quot;</span>&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="function"><span class="title">handleOpen</span>(<span class="params">key, keyPath</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(key, keyPath);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">handleClose</span>(<span class="params">key, keyPath</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(key, keyPath);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">select</span>(<span class="params">key, keyPath</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(key, keyPath);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="侧栏"><a href="#侧栏" class="headerlink" title="侧栏"></a>侧栏</h2><p>通过el-menu-item-group组件可以实现菜单进行分组，分组名可以通过title属性直接设定，也可以通过具名 slot 来设定。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-submenu index=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">       <span class="xml"><span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&quot;title&quot;</span>&gt;</span>我的工作台<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2-1&quot;</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2-2&quot;</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;2-3&quot;</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span></span><br><span class="line">  &lt;/el-submenu&gt;</span><br></pre></td></tr></table></figure><h1 id="Dialog-对话框"><a href="#Dialog-对话框" class="headerlink" title="Dialog 对话框"></a>Dialog 对话框</h1><p>需要设置visible属性，它接收Boolean，当为true时显示 Dialog。Dialog 分为两个部分：body和footer，footer需要具名为footer的slot。title属性用于定义标题，它是可选的，默认值为空。</p><h2 id="弹出”注册成功”的提示"><a href="#弹出”注册成功”的提示" class="headerlink" title="弹出”注册成功”的提示"></a>弹出”注册成功”的提示</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">input</span>&quot; @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = true&quot;</span>&gt;</span>立即创建<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span></span></span><br><span class="line"><span class="tag">  <span class="attr">title</span>=<span class="string">&quot;提示&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:visible.sync</span>=<span class="string">&quot;dialogVisible&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:before-close</span>=<span class="string">&quot;handleClose&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>注册成功<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false&quot;</span>&gt;</span>取 消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false&quot;</span>&gt;</span>确 定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">dialogVisible</span>: <span class="literal">false</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="function"><span class="title">handleClose</span>(<span class="params">done</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.$confirm(<span class="string">&#x27;确认关闭？&#x27;</span>)</span><br><span class="line">        .then(<span class="function"><span class="params">_</span> =&gt;</span> &#123;</span><br><span class="line">          done();</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="params">_</span> =&gt;</span> &#123;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="Table-表格"><a href="#Table-表格" class="headerlink" title="Table 表格"></a>Table 表格</h1><p>用于展示多条结构类似的数据，可对数据进行排序、筛选、对比或其他自定义操作</p><h2 id="创建一个可选择固定列和表头的表格"><a href="#创建一个可选择固定列和表头的表格" class="headerlink" title="创建一个可选择固定列和表头的表格"></a>创建一个可选择固定列和表头的表格</h2><p>height属性固定表头，flex属性固定列，stripe属性可以创建带斑马纹的表格。<br>Table 组件是不具有竖直方向的边框的，如果需要可以使用border属性设置为true即可启用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">height</span>=<span class="string">&quot;250&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">border</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">    <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">label</span>=<span class="string">&quot;名称&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table-column</span></span></span><br><span class="line"><span class="tag">    <span class="attr">prop</span>=<span class="string">&quot;price&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">label</span>=<span class="string">&quot;价格&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">tableData</span>: [&#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Applejuice&#x27;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="string">&#x27;20&#x27;</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Lemmonjuice&#x27;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="string">&#x27;25&#x27;</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;watermelonjuice&#x27;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="string">&#x27;30&#x27;</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Margojuice&#x27;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="string">&#x27;25&#x27;</span></span><br><span class="line">      &#125;,&#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Applejuice&#x27;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="string">&#x27;20&#x27;</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Lemmonjuice&#x27;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="string">&#x27;25&#x27;</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;watermelonjuice&#x27;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="string">&#x27;30&#x27;</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Margojuice&#x27;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="string">&#x27;25&#x27;</span></span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Form-表单"><a href="#Form-表单" class="headerlink" title="Form 表单"></a>Form 表单</h1><p>inline 属性可以让表单域变为行内的表单域<br>label-position 属性可以改变表单域标签的位置，可选值为 top、left，当设为 top 时标签会置于表单域的顶部<br>Form 组件提供了表单验证的功能，只需要通过 rules 属性传入约定的验证规则，并将 Form-Item 的 prop 属性设置为需校验的字段名即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;formLabelAlign.user&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;活动名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;formLabelAlign.name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;性别&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;formLabelAlign.region&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span> <span class="attr">value</span>=<span class="string">&quot;women&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">labelPosition</span>: <span class="string">&quot;right&quot;</span>,</span><br><span class="line">      <span class="attr">formLabelAlign</span>: &#123;</span><br><span class="line">        <span class="attr">user</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">region</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">rules</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: [</span><br><span class="line">          &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;请输入活动名称&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span> &#125;,</span><br><span class="line">          &#123; <span class="attr">min</span>: <span class="number">3</span>, <span class="attr">max</span>: <span class="number">5</span>, <span class="attr">message</span>: <span class="string">&quot;长度在 3 到 5 个字符&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span> &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;npm安装element&quot;&gt;&lt;a href=&quot;#npm安装element&quot; class=&quot;headerlink&quot; title=&quot;npm安装element&quot;&gt;&lt;/a&gt;npm安装element&lt;/h1&gt;&lt;p&gt;&lt;code&gt;npm i element-ui -S&lt;/cod</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="https://nickyhyh.github.io/notebook/2021/10/03/git%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/"/>
    <id>https://nickyhyh.github.io/notebook/2021/10/03/git%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/</id>
    <published>2021-10-03T02:55:30.662Z</published>
    <updated>2021-10-11T13:58:20.332Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建仓库命令"><a href="#创建仓库命令" class="headerlink" title="创建仓库命令"></a>创建仓库命令</h1><p>git init - 初始化仓库<br>git clone - 拷贝一份远程仓库</p><h1 id="提交与修改"><a href="#提交与修改" class="headerlink" title="提交与修改"></a>提交与修改</h1><p>git add - 添加文件到暂存区<br>git commit - 将暂存区内容添加到仓库中<br>git status - 查看仓库当前状态，显示有变更的文件<br>git diff - 比较暂存区和工作区文件的不同<br>git rm- 删除工作区文件<br>git reset  - 回退版本</p><h1 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h1><p>git remote - 远程仓库操作<br>git fetch - 从远程获取代码块<br>git pull - 下载远程代码并合并<br>git push - 上传远程代码并合并</p><h1 id="发布笔记步骤"><a href="#发布笔记步骤" class="headerlink" title="发布笔记步骤"></a>发布笔记步骤</h1><p>1.<code>npm run build</code><br>2.commit修改的内容<br>3.push修改内容<br>4.<code>npm run publish</code></p><h2 id="发布报错"><a href="#发布报错" class="headerlink" title="发布报错"></a>发布报错</h2><p>1.git status:检查commit状态<br>2.git clean:清除未被 add 或被 commit 的本地修改<br>3.git checkout -f:强制切换分支<br>4.git branch -D gh-pages-xxx:删除xxx分支<br>提示error: Cannot delete branch ‘gh-pages-b039354’ checked out at ‘E:/note’<br>切换分支:<br><code>git checkout master </code><br><code>git branch -D gh-pages-xxx</code><br><code>git push</code><br><code>npm run publish</code></p><h1 id="全局配置用户信息"><a href="#全局配置用户信息" class="headerlink" title="全局配置用户信息"></a>全局配置用户信息</h1><p><code>git config --global user.name &quot;Nicky&quot;</code><br><code>git config --global user.email &quot;smyhvae@163.com&quot;</code></p><h1 id="分支的合并"><a href="#分支的合并" class="headerlink" title="分支的合并"></a>分支的合并</h1><p>1.基于master分支，创建一个新的分支，起名为first_item_recommend<br><code>$ git branch first_item_recommend    // 创建新的分支</code><br><code>$ git checkout first_item_recommend  //切换到新的分支</code><br>2.在新的分支first_item_recommend上，完成开发工作，并 commit 、push。<br>3.将分支first_item_recommend上的开发进度合并到master分支：<br><code>$ git checkout master  //切换到master分支</code><br><code>$ git merge first_item_recommend    //将分支 first_item_recommend 的开发进度合并到 master 分支</code><br>4.合并之后，master分支和first_item_recommend分支会指向同一个位置。<br>5.删除分支first_item_recommend：<br><code>git branch -d first_item_recommend</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建仓库命令&quot;&gt;&lt;a href=&quot;#创建仓库命令&quot; class=&quot;headerlink&quot; title=&quot;创建仓库命令&quot;&gt;&lt;/a&gt;创建仓库命令&lt;/h1&gt;&lt;p&gt;git init - 初始化仓库&lt;br&gt;git clone - 拷贝一份远程仓库&lt;/p&gt;
&lt;h1 id=&quot;提</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>学习vue</title>
    <link href="https://nickyhyh.github.io/notebook/2021/10/02/%E5%AD%A6%E4%B9%A0vue/"/>
    <id>https://nickyhyh.github.io/notebook/2021/10/02/%E5%AD%A6%E4%B9%A0vue/</id>
    <published>2021-10-02T07:28:40.609Z</published>
    <updated>2021-10-12T14:18:44.143Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue框架的特点"><a href="#Vue框架的特点" class="headerlink" title="Vue框架的特点"></a>Vue框架的特点</h1><p>1.模板渲染：基于 html 的模板语法，学习成本低。</p><p>2.响应式的更新机制：数据改变之后，视图会自动刷新。【重要】</p><p>3.渐进式框架</p><p>4.组件化/模块化</p><p>5.轻量：开启 gzip压缩后，可以达到 20kb 大小</p><h1 id="利用-vue-cli-新建一个空的项目"><a href="#利用-vue-cli-新建一个空的项目" class="headerlink" title="利用 vue-cli 新建一个空的项目"></a>利用 vue-cli 新建一个空的项目</h1><h2 id="安装-vue-cli（命令行工具"><a href="#安装-vue-cli（命令行工具" class="headerlink" title="安装 vue-cli（命令行工具"></a>安装 vue-cli（命令行工具</h2><p><code># 全局安装 vue-cli</code><br><code>$ npm install -g @vue/cli</code></p><h2 id="初始化一个-simple-项目"><a href="#初始化一个-simple-项目" class="headerlink" title="初始化一个 simple 项目"></a>初始化一个 simple 项目</h2><p>1.<code> vue create my-app</code><br>如果初学者，直接选default就行。之后会自动生成一个空的初始化项目，包含了项目目录、以及项目依赖的脚本</p><p>buid：打包配置的文件夹</p><p>config：webpack对应的配置</p><p>src：开发项目的源码</p><p>App.vue：入口组件。.vue文件都是组件。<br>main.js：项目入口文件。<br>static：存放静态资源</p><p>.babelrc：解析ES6的配置文件</p><p>.editorcofnig：编辑器的配置</p><p>.postcssrc.js：html添加前缀的配置</p><p>index.html：单页面的入口。通过 webpack打包后，会把 src 源码进行编译，插入到这个 html 里面来。</p><p>package.json：项目的基础配置，包含版本号、脚本命令、项目依赖库、开发依赖库、引擎等。</p><p>2.2）本地运行项目：<br><code> cd my-app</code><br> <code> npm run serve</code><br> 浏览器输入<a href="http://localhost:8080/%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%AE%A9%E8%BF%99%E4%B8%AA%E7%A9%BA%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%9C%A8%E6%9C%AC%E5%9C%B0%E8%B7%91%E8%B5%B7%E6%9D%A5">http://localhost:8080/，就可以让这个空的项目在本地跑起来</a><br> 备注：我们在 GitHub上下载的任何Vue有关的项目，第一步都是要首先执行 npm install，安装依赖的 mode_modules，然后再运行。</p><h1 id="html中导入vue"><a href="#html中导入vue" class="headerlink" title="html中导入vue"></a>html中导入vue</h1> <!--1、导入Vue的包--><pre><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js&quot;&gt;&lt;/script&gt;</code></pre><h1 id="vue语法"><a href="#vue语法" class="headerlink" title="vue语法"></a>vue语法</h1><p>v-cloak：保持和元素实例的关联，直到结束编译后自动消失。v-cloak指令和CSS 规则一起用的时候，能够解决差值表达式闪烁的问题（即：可以隐藏未编译的标签直到实例准备完毕。</p><p>v-bind : 用于绑定属性。  简写 ：属性名</p><p>v-text ：会覆盖元素中原本的内容,可以将一个变量的值渲染到指定的元素中。</p><h2 id="差值表达式和-v-text-的区别"><a href="#差值表达式和-v-text-的区别" class="headerlink" title="差值表达式和 v-text 的区别"></a>差值表达式和 v-text 的区别</h2><p>1： v-text 没有闪烁的问题，因为它是放在属性里的。<br>2 :插值表达式只会替换自己的这个占位符，并不会把整个元素的内容清空。</p><p>v-html :会被解析成html元素</p><h1 id="v-on：事件绑定机制"><a href="#v-on：事件绑定机制" class="headerlink" title="v-on：事件绑定机制"></a>v-on：事件绑定机制</h1><p>v-on:click：点击事件<br>v-on的简写形式：<br><code>&lt;button v-on:click=&quot;change&quot;&gt;改变name的值&lt;/button&gt;</code><br>可以简写成：<br><code>&lt;button @click=&quot;change&quot;&gt;改变name的值&lt;/button&gt;</code></p><h1 id="v-on的常见事件修饰符"><a href="#v-on的常见事件修饰符" class="headerlink" title="v-on的常见事件修饰符"></a>v-on的常见事件修饰符</h1><h2 id="stop-阻止冒泡。本质是调用-event-stopPropagation"><a href="#stop-阻止冒泡。本质是调用-event-stopPropagation" class="headerlink" title=".stop 阻止冒泡。本质是调用 event.stopPropagation()"></a>.stop 阻止冒泡。本质是调用 event.stopPropagation()</h2><p>例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;fatherClick&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;child&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;childClick&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">data</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">fatherClick</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(<span class="string">&#x27;father 被点击了&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">childClick</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(<span class="string">&#x27;child 被点击了&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>上方代码中，存在冒泡的现象，父标签中包含了一个子标签。当点击子标签时，父标签也会被触发。打印顺序是：<br>  child 被点击了<br>  father 被点击了<br>如果我不想让子标签的点击事件冒泡到父亲，该怎么做呢？办法是：给子标签加一个事件修饰符.stop，阻止冒泡。代码如下：<br><code>&lt;div class=&quot;child&quot; @click.stop=&quot;childClick&quot;&gt;</code><br>阻止冒泡后，当点击子标签时，打印结果是：<br> child 被点击了</p><h2 id="capture：触发事件时，采用捕获的形式，而不是冒泡的形式。"><a href="#capture：触发事件时，采用捕获的形式，而不是冒泡的形式。" class="headerlink" title=".capture：触发事件时，采用捕获的形式，而不是冒泡的形式。"></a>.capture：触发事件时，采用捕获的形式，而不是冒泡的形式。</h2><p>还是采用上面的例子：当按钮点击时，如果想要采取捕获的方式，而不是冒泡的方式，办法是：可以直接在父标签上加事件修饰符.capture。代码如下：<br><code>&lt;div class=&quot;father&quot; @click.capture=&quot;fatherClick&quot;&gt;</code><br>当点击子标签时，打印结果是：<br>  father 被点击了<br>  child 被点击了</p><h2 id="prevent-阻止默认事件（默认行为）。本质是调用-event-preventDefault-。"><a href="#prevent-阻止默认事件（默认行为）。本质是调用-event-preventDefault-。" class="headerlink" title=".prevent 阻止默认事件（默认行为）。本质是调用 event.preventDefault()。"></a>.prevent 阻止默认事件（默认行为）。本质是调用 event.preventDefault()。</h2><p>表单的默认行为：点击按钮后表单就会被提交到form标签的action属性中指定的那个页面中去，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span><br><span class="line">     <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;表单提交&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>修改为点击按钮后，不提交到服务器，而是执行我们自己想要的事件（在submit方法中另行定义）。如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 阻止表单中submit的默认事件 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span> <span class="attr">action</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="comment">&lt;!-- 执行自定义的click事件 --&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;mySubmit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;表单提交&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">new</span> Vue(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="attr">mySubmit</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        alert(<span class="string">&#x27;ok&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="self-只有当事件在该元素本身（比如不是子元素）触发时，才会触发回调。"><a href="#self-只有当事件在该元素本身（比如不是子元素）触发时，才会触发回调。" class="headerlink" title=".self 只有当事件在该元素本身（比如不是子元素）触发时，才会触发回调。"></a>.self 只有当事件在该元素本身（比如不是子元素）触发时，才会触发回调。</h2><p>在事件触发机制中，当点击子标签时，父标签会通过冒泡的形式被触发（父标签本身并没有被点击）。可如果我给父标签的点击事件设置.self修饰符，达到的效果是：子标签的点击事件不会再冒泡到父标签了，只有点击符标签本身，父标签的事件才会被触发。<br><code>&lt;div class=&quot;father&quot; @click.self=&quot;fatherClick&quot;&gt;</code><br>.stop和.self都可以阻止冒泡，二者的区别在于：前者能够阻止整个冒泡行为，而后者只能阻止自己身上的冒泡行为。</p><p>v-if : 不显示P标签<br>v-show : 显示P标签，<p style="display:none">现在你看到我了</p><br>seen为true时，v-if和v-show没有差别，都显示P标签内容。<br>seen为false时,页面不显示内容，但是html里显示p标签。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span>,</span><br><span class="line">                <span class="attr">seen</span>: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>v-for = “item in todo”<br>item.属性和item[属性]都可以访问到对象的属性值，区别在于item[属性]支持变量动态属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">todo: [&#123; <span class="attr">num</span>: <span class="string">&#x27;hello&#x27;</span>, <span class="attr">num2</span>: <span class="string">&#x27;456&#x27;</span> &#125;,</span><br><span class="line">       &#123; <span class="attr">num</span>: <span class="string">&#x27;123&#x27;</span>, <span class="attr">num2</span>: <span class="string">&#x27;789&#x27;</span> &#125;,</span><br><span class="line">       &#123; <span class="attr">key</span>: <span class="string">&#x27;num&#x27;</span>, &#125;]</span><br></pre></td></tr></table></figure><h1 id="实例生命周期钩子"><a href="#实例生命周期钩子" class="headerlink" title="实例生命周期钩子"></a>实例生命周期钩子</h1><p>每个 Vue 实例在被创建时都要经过一系列的初始化过程——如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等。同时在这个过程中也会运行一些叫做生命周期钩子的函数。</p><p>created：还未挂载到DOM，不能访问到$el属性，可用于初始化一些数据，但和DOM操作相关的不能在created中执行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">created</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">this</span>.message = <span class="string">&quot;speed&quot;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>mounted：实例已经挂在到DOM，此时可以通过DOM API获取到DOM节点。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;todo-item&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">props</span>: [<span class="string">&#x27;todo&#x27;</span>],</span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;&lt;li id=&quot;li&quot;&gt;&#123;&#123; todo.text &#125;&#125;&lt;/li&gt;&#x27;</span>,</span><br><span class="line">            <span class="attr">created</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;#li&quot;</span>))</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">mounted</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">&quot;#li&quot;</span>))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//document.querySelector:在页面上查找id=&quot;li&quot;的元素</span></span><br></pre></td></tr></table></figure><p>destroyed:Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。<br>定义一个名为todo-item的组件2秒后销毁组件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">       <span class="xml"><span class="tag">&lt;<span class="name">todo-item</span> <span class="attr">v-if</span>=<span class="string">&quot;show&quot;</span> <span class="attr">:todo</span>=<span class="string">&quot;todoitem&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span></span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">       Vue.component(<span class="string">&#x27;todo-item&#x27;</span>, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           <span class="attr">props</span>: [<span class="string">&#x27;todo&#x27;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           <span class="attr">template</span>: <span class="string">&#x27;&lt;li&gt;&#123;&#123; todo.text &#125;&#125;&lt;/li&gt;&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           <span class="attr">destroyed</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">               <span class="built_in">console</span>.log(<span class="string">&#x27;组件已销毁&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">       &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">       <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">               <span class="attr">todoitem</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                   <span class="attr">text</span>: <span class="string">&#x27;string&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">               &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">               <span class="attr">show</span>: <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           <span class="attr">created</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">               <span class="keyword">var</span> that = <span class="built_in">this</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">               <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                   that.show = <span class="literal">false</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">               &#125;, <span class="number">2000</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">           &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">       &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="创建hello项目"><a href="#创建hello项目" class="headerlink" title="创建hello项目"></a>创建hello项目</h1><p><code>vue create hello-world</code></p><h1 id="创建网页"><a href="#创建网页" class="headerlink" title="创建网页"></a>创建网页</h1><p>1.views文件夹中创建FirstPage.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;FirstPage&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is an FirstPage<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>2.router文件夹下index.js中引用FirstPage.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [&#123;</span><br><span class="line">         &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/FirstPage&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;FirstPage&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span> ( <span class="comment">/* webpackChunkName: &quot;about&quot; */</span> <span class="string">&#x27;../views/FirstPage.vue&#x27;</span>)</span><br><span class="line">    &#125;]</span><br></pre></td></tr></table></figure><p>component有两种定义方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> SecondPage <span class="keyword">from</span> <span class="string">&#x27;../views/SecondPage.vue&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/SecondPage&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;SecondPage&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: SecondPage</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/SecondPage&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;SecondPage&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="comment">/* webpackChunkName: &quot;about&quot; */</span> <span class="string">&#x27;../views/About.vue&#x27;</span>)</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><p>Home.vue中自定义了HelloWorld元素，引用到HelloWorld.vue<br><code>import HelloWorld from &#39;@/components/HelloWorld.vue&#39;</code><br>HelloWorld.vue中引用HelloWorld元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">name</span>: <span class="string">&#x27;HelloWorld&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">msg</span>: <span class="built_in">String</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>router文件是针对App.vue的路由，对应的内容全部都会显示在<router-view></router-view>中，App.vue会自动寻找这一些组件，比如，在目前的index.js中，path显示的是“/”这就意味着当页面打开到App.vue，而没有增加其他的url后缀的时候 （<a href="http://localhost:8080/#/%EF%BC%89%EF%BC%8CApp.vue%E4%BC%9A%E8%87%AA%E5%8A%A8%E8%BD%BD%E5%85%A5HelloWorld%E8%BF%99%E4%B8%AA%E7%BB%84%E4%BB%B6%E3%80%82">http://localhost:8080/#/），App.vue会自动载入HelloWorld这个组件。</a></p><h1 id="vue-router中children使用方法"><a href="#vue-router中children使用方法" class="headerlink" title="vue-router中children使用方法"></a>vue-router中children使用方法</h1><p>router:index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [&#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Home&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: Home,</span><br><span class="line">        <span class="attr">children</span>: [&#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/page1&#x27;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;page1&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">import</span> ( <span class="comment">/* webpackChunkName: &quot;about&quot; */</span> <span class="string">&#x27;../views/FirstPage.vue&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;]</span><br></pre></td></tr></table></figure><p>Home.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;home&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/page1&quot;</span>&gt;</span>导航一<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue框架的特点&quot;&gt;&lt;a href=&quot;#Vue框架的特点&quot; class=&quot;headerlink&quot; title=&quot;Vue框架的特点&quot;&gt;&lt;/a&gt;Vue框架的特点&lt;/h1&gt;&lt;p&gt;1.模板渲染：基于 html 的模板语法，学习成本低。&lt;/p&gt;
&lt;p&gt;2.响应式的更新机制：</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>学习markdown语法</title>
    <link href="https://nickyhyh.github.io/notebook/2021/10/02/markdown/"/>
    <id>https://nickyhyh.github.io/notebook/2021/10/02/markdown/</id>
    <published>2021-10-02T07:28:40.606Z</published>
    <updated>2021-10-08T12:19:02.087Z</updated>
    
    <content type="html"><![CDATA[<h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>`<br><em><strong>这是斜体加粗的文字</strong></em><br><del>这是加删除线的文字</del></p><blockquote><p>这是引用的内容</p></blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote><hr><hr><hr><hr><p><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg" alt="blockchain" title="区块链"></p><p><a href="http://jianshu.com/">简书</a><br><a href="http://baidu.com/">百度</a></p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><table><thead><tr><th>表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr></tbody></table><p><code>create database hero;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function fun()&#123;</span><br><span class="line">     echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">&#125;</span><br><span class="line">fun();</span><br></pre></td></tr></table></figure><p>ctrl+`:调出终端</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;这是四级标题&quot;&gt;&lt;a href=&quot;#这是四级标题&quot; class=&quot;headerlink&quot; title=&quot;这是四级标题&quot;&gt;&lt;/a&gt;这是四级标题&lt;/h4&gt;&lt;h5 id=&quot;这是五级标题&quot;&gt;&lt;a href=&quot;#这是五级标题&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
</feed>
